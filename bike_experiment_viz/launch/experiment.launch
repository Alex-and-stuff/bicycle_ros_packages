<?xml version="1.0" encoding="UTF-8"?>

<launch>
<!-- ===== Load in map ===== -->
<arg name="map_file" default="$(find bicycle_ros)/map/nthu_world.yaml"/>
<node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

<!-- ===== TF transformations ===== -->
<node pkg="tf" type="static_transform_publisher" name="tf_odom_bike" args="0 0 0 0 0 0 /bike/odom /bike/base_link 50"/>
<node pkg="tf" type="static_transform_publisher" name="radar_baselink_0" args="0.8 -0.025 0 0 0 0 /bike/base_link ti_mmwave_0 100"/>
<node pkg="tf" type="static_transform_publisher" name="tf_mmwave_baselink" args="0.8 -0.025 0 0 0 0 /bike/base_link /mmwave_baselink 100"/>


<!-- ===== Launch the mmwave radar ===== -->
<arg name="device" value="6843" doc="TI mmWave sensor device type [1443, 1642, 6843]"/>
<arg name="config" value="3d" doc="TI mmWave sensor device configuration [3d_best_range_res (not supported by 1642 EVM), 2d_best_range_res]"/>
<arg name="max_allowed_elevation_angle_deg" default="90" doc="Maximum allowed elevation angle in degrees for detected object data [0 > value >= 90]}"/>
<arg name="max_allowed_azimuth_angle_deg" default="90" doc="Maximum allowed azimuth angle in degrees for detected object data [0 > value >= 90]}"/>
<node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="ti_mmwave" ns="radar_0" output="screen">
  <param name="command_port" value="/dev/ttyUSB0"  />
  <param name="command_rate" value="115200"   />
  <param name="data_port" value="/dev/ttyUSB1"  />
  <param name="data_rate" value="921600"   />
  <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"   />
  <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"   />
  <param name="frame_id" value="/ti_mmwave_0"/>
  <param name="mmWaveCLI_name" value="/mmWaveCLI" />
  <remap from="/ti_mmwave/radar_scan_pcl" to="/ti_mmwave/radar_scan_pcl_0"/>
</node>
<node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="ti_mmwave_config" ns="radar_0" args="$(find ti_mmwave_rospkg)/cfg/xwr68xx_AOP_0420_10.cfg" output="screen" >
  <param name="mmWaveCLI_name" value="/mmWaveCLI" />
</node>

<!-- ===== Arguments of initial state ===== -->
<arg name="init_x" value="77.0"/>
<arg name="init_y" value="-3.0"/>
<arg name="init_phi" value="2.7"/>
<arg name="STM_GPS" value="1"/>
<arg name="USE_POS_BIAS" value="0"/>
<arg name="PUB_GPS" value="0"/>
<arg name="PUB_EKF" value="0"/>
<arg name="RECORD_DATA" value="0"/>

<!-- ===== Launch the kf tracker ===== -->
<node pkg="multi_object_tracking_lidar" type="kf_tracker" name="kf_tracker" output="screen" />

<!-- ===== Launch the EKF node ===== -->
<node pkg="px4_ekf" type="px4_ekf" name="px4_ekf_node" output= "screen">
  <param name="INIT_X" value="$(arg init_x)" /> 
  <param name="INIT_Y" value="$(arg init_y)" /> 
  <param name="INIT_PHI" value="$(arg init_phi)" /> 
</node>

<!-- ===== Launch the visualization node ===== -->
<node pkg="bike_experiment_viz" type="bike_experiment_viz" name="bike_experiment_viz_node" output= "screen" >
  <param name="INIT_X" value="$(arg init_x)" /> 
  <param name="INIT_Y" value="$(arg init_y)" /> 
  <param name="STM_GPS" value="$(arg STM_GPS)" /> 
  <param name="USE_POS_BIAS" value="$(arg USE_POS_BIAS)" /> 
  <param name="PUB_GPS" value="$(arg PUB_GPS)" /> 
  <param name="PUB_EKF" value="$(arg PUB_EKF)" />
  <param name="RECORD_DATA" value="$(arg RECORD_DATA)" />
</node>

<!-- ===== Launch the MPC node ===== -->
<node pkg="mpc_ros_bike_node" type="mpc_ros_bike_node" name="mpc_bike_main" output= "screen">
  <param name="INIT_X" value="$(arg init_x)" /> 
  <param name="INIT_Y" value="$(arg init_y)" /> 
  <param name="INIT_PHI" value="$(arg init_phi)" />  
</node>

<arg name="rvizconfig" default="$(find bike_experiment_viz)/launch/experiment.rviz"/>
<node name="rviz" pkg="rviz" args="-d $(arg rvizconfig)" type="rviz" required="true"/>
</launch>
