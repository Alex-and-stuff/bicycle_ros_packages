<?xml version="1.0" encoding="UTF-8"?>
 
<launch>
  <arg name="map_file" default="$(find bicycle_ros)/map/nthu_world.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>
  <!--node pkg="tf" type="static_transform_publisher" name="tf_mmwave_bike" args="0 0 0 0 0 0 /bike/base_link /ti_mmwave/radar_scan_pcl_0 50"/-->
  <node pkg="tf" type="static_transform_publisher" name="tf_odom_bike" args="0 0 0 0 0 0 /bike/odom /bike/base_link 50"/>
  <node pkg="tf" type="static_transform_publisher" name="radar_baselink_0" args="0.8 0 0.6 0 0 0 /bike/base_link /ti_mmwave_0 100"/>
  <!--node pkg="tf" type="static_transform_publisher" name="tf22" args="79.5 -3 0.6 2.7 0 0 /map /bike/base_link 5"/-->
  <!--node pkg="tf" type="static_transform_publisher" name="tf_map_odom" args="0 0 0 0 0 0 /map /bike/odom 5"/-->
  
<!-- KF Tracker Launcher -->  
  <node pkg="multi_object_tracking_lidar" type="kf_tracker" name="kf_tracker" output="screen" />
  <node pkg="tf" type="static_transform_publisher" name="tf_mmwave_baselink" args="0 0 0 0 0 0 /ti_mmwave_0 /mmwave_base_link 100"/>
  
<!-- MMwave Launcher -->
  <!-- Input arguments -->
  <arg name="device" value="6843" doc="TI mmWave sensor device type [1443, 1642, 6843]"/>
  <arg name="config" value="3d" doc="TI mmWave sensor device configuration [3d_best_range_res (not supported by 1642 EVM), 2d_best_range_res]"/>
  <arg name="max_allowed_elevation_angle_deg" default="90" doc="Maximum allowed elevation angle in degrees for detected object data [0 > value >= 90]}"/>
  <arg name="max_allowed_azimuth_angle_deg" default="90" doc="Maximum allowed azimuth angle in degrees for detected object data [0 > value >= 90]}"/>

  <!-- mmWave_Manager node -->
  <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="ti_mmwave" ns="radar_0" output="screen">
    <param name="command_port" value="/dev/ttyUSB0"  />
    <param name="command_rate" value="115200"   />
    <param name="data_port" value="/dev/ttyUSB1"  />
    <param name="data_rate" value="921600"   />
    <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"   />
    <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"   />
    <param name="frame_id" value="/ti_mmwave_0"/>
    <param name="mmWaveCLI_name" value="/mmWaveCLI" />
    <remap from="/ti_mmwave/radar_scan_pcl" to="/ti_mmwave/radar_scan_pcl_0"/>
  </node>

  <!-- mmWaveQuickConfig node (terminates after configuring mmWave sensor) 6 10 13-->
  <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="ti_mmwave_config" ns="radar_0" args="$(find ti_mmwave_rospkg)/cfg/xwr68xx_AOP_0420_10.cfg" output="screen" >
    <param name="mmWaveCLI_name" value="/mmWaveCLI" />
  </node>
  
<!-- Spawn Bicycle Model And Controller -->
  <group ns="/bike">
    <arg name="model" default="$(find bicycle_ros)/urdf/bicycle.xacro"/>
    <arg name="gui" default="true"/>
    <param name="tf_prefix" value="/bike" />
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) ns:=/bike"/>
    <param name="use_gui" value="$(arg gui)"/>
    
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    

    <node name="controller_spawner" pkg="controller_manager" type="spawner"
      respawn="false" output="screen" ns="/bike" args="--namespace=/bike 
      joint_state_controller
      front_fork_controller  
      back_wheel_controller
      --timeout 60">
    </node> 

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <remap from="/joint_states" to="/bike/joint_states"/>
      <param name="publish_rate" type="double" value="200.0" />
      <param name="tf_prefix" value="/bike" />
    </node>
  </group>

  <node pkg="bike_viz" type="bike_viz" name="bike_viz_node" output= "screen" />

  <arg name="rvizconfig" default="$(find bicycle_ros)/launch/display_mmwave.rviz"/>
  <node name="rviz" pkg="rviz" args="-d $(arg rvizconfig)" type="rviz" required="true"/>
</launch>
